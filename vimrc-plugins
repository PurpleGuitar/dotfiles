" Vundle and plugins
" ========================================================================


" ========================================================================
" START VUNDLE PLUGINS
" ========================================================================
" (Vundle.vim must always be first)
Plugin 'gmarik/Vundle.vim'                 " Vundle vundles Vundle

" ========================================================================
" Plugins that don't need configuring
" ========================================================================

" The Essentials
Plugin 'PurpleGuitar/vim-croz-colorscheme' " Craig's color scheme
Plugin 'tpope/vim-sensible'                " Sensible defaults for vim settings

" Making Editing a Pleasure
Plugin 'tpope/vim-unimpaired'              " Shortcuts, such as ]b (:bnext), ]q (:cnext), an ]e (exchange line)
Plugin 'tomtom/tcomment_vim'               " Sophisticated commenting, e.g. Ctrl-// to comment
Plugin 'Raimondi/delimitMate'              " Automatically close quote, parens, brackets, etc.
Plugin 'kshenoy/vim-signature'             " Show marks in gutter
Plugin 'ctrlpvim/ctrlp.vim'                " Fast file finder
Plugin 'tpope/vim-abolish'                 " Tools for smart replace, mangling/demangling, camelCasing, etc.
Plugin 'tommcdo/vim-exchange'              " Exchange chunks of text

" Commonly used Syntaxes
Plugin 'tmux-plugins/vim-tmux'             " Syntax support for tmux files

" Other Stuff
Plugin 'sjl/gundo.vim'                     " Visual undo
Plugin 'tpope/vim-fugitive'                " Git integration (:GStatus, :GPush, etc.)
Plugin 'guns/xterm-color-table.vim'        " Display a color chart of XTerm color codes

" ========================================================================
" Tagbar
" ========================================================================
Plugin 'majutsushi/tagbar'                 " Sidebar for code
let g:tagbar_sort = 0


" ========================================================================
" Easy Align
" ========================================================================
Plugin 'junegunn/vim-easy-align'
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)


" ========================================================================
" Syntastic
" ========================================================================
Plugin 'scrooloose/syntastic'
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0


" ========================================================================
" Airline (Powerline)
" ========================================================================
Plugin 'vim-airline/vim-airline.git'
Plugin 'vim-airline/vim-airline-themes.git'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline_powerline_fonts = 1


" ========================================================================
" Git Gutter
" ========================================================================
Plugin 'airblade/vim-gitgutter'
if exists('&signcolumn')  " Vim 7.4.2201
    set signcolumn=yes
else
    let g:gitgutter_sign_column_always = 1
endif"
nmap [h <Plug>GitGutterPrevHunk
nmap ]h <Plug>GitGutterNextHunk


" ========================================================================
" Pandoc
" ========================================================================
Plugin 'vim-pandoc/vim-pandoc'
Plugin 'vim-pandoc/vim-pandoc-syntax'
let g:pandoc#formatting#mode = 'h'                               " hard line breaks
let g:pandoc#keyboard#sections#header_style = 's'                " Use setext style headers for 1 and 2
let g:pandoc#formatting#textwidth = 75                           " Text width for Pandoc documents
let g:pandoc#folding#level = 999
let g:pandoc#syntax#conceal#blacklist = ["emdashes", "endashes", "newline", "image"]
let g:pandoc#folding#fdc = 0                                     " Don't show foldlevel column
let g:pandoc#formatting#equalprg='pandoc -t markdown --standalone --columns 75'
let g:pandoc#formatting#extra_equalprg=''
let g:pandoc#folding#fold_yaml = 1
let g:pandoc#syntax#conceal#urls = 1

" " Use tab to jump to next link
autocmd FileType pandoc nnoremap <Tab> /\[[^]]\+\][[(]\<bar><[^!>]\+><CR>:nohlsearch<CR>
autocmd FileType pandoc nnoremap <S-Tab> ?\[[^]]\+\][[(]\<bar><[^!>]\+><CR>:nohlsearch<CR>

" Linewise movement in pandoc
autocmd FileType pandoc nnoremap j gj
autocmd FileType pandoc nnoremap k gk
autocmd FileType pandoc vnoremap j gj
autocmd FileType pandoc vnoremap k gk

" Remap goto definition to goto link
autocmd FileType pandoc nmap gd <Leader>gl

" Show line breaks
autocmd FileType pandoc set showbreak=....

" Shortcuts for generating pandoc docs
autocmd FileType pandoc nnoremap <Leader>pp  :Pandoc  html --standalone<CR>
autocmd FileType pandoc nnoremap <Leader>pb  :Pandoc! html --standalone<CR> 


" ========================================================================
" NERDTree file browser
" ========================================================================
Plugin 'scrooloose/nerdtree'
nnoremap <Leader>nt :NERDTreeFind<CR>

" From: http://superuser.com/questions/195022/vim-how-to-synchronize-nerdtree-with-current-opened-tab-file-path
" returns true iff is NERDTree open/active
function! s:isNTOpen()
    return exists("t:NERDTreeBufName") && (bufwinnr(t:NERDTreeBufName) != -1)
endfunction

" calls NERDTreeFind iff NERDTree is active, current window contains a modifiable file, and we're not in vimdiff
function! s:syncTree()
    if &modifiable && s:isNTOpen() && strlen(expand('%')) > 0 && !&diff
        let l:curwinnr = winnr()
        NERDTreeFind
        exec l:curwinnr . "wincmd w"
        "wincmd p
    endif
endfunction

autocmd BufEnter * call s:syncTree()


" ========================================================================
" NERDTree Git plugin
" ========================================================================
Plugin 'Xuyuanp/nerdtree-git-plugin'
" let g:NERDTreeShowIgnoredStatus = 1
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "M",
    \ "Staged"    : "S",
    \ "Untracked" : "U",
    \ "Renamed"   : "R",
    \ "Unmerged"  : "U",
    \ "Deleted"   : "D",
    \ "Dirty"     : "R",
    \ "Clean"     : "C",
    \ 'Ignored'   : 'I',
    \ "Unknown"   : "?"
    \ }


" ========================================================================
" Quick Scope - Highlights targets for f, F, t, and T motions
" ========================================================================
Plugin 'unblevable/quick-scope'
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

